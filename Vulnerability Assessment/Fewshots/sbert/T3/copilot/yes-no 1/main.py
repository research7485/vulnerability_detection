import google.generativeai as palm
import os
import random
import sys
import csv

def main():
    model_id = 'models/text-bison-safety-off'
    palm.configure(api_key=os.environ['google_key'])

    data = read_functions('input/copilot_functions.csv') # Is a dictionary of dictionaries
    ranking_data = read_rankings('input/copilot_ranking_T3.csv')
    bigvul_data = read_bigvul_functions('input/dfBigVulFinal.csv')
    
    output_file = 'output/copilot_T3_1.csv'
    with open(output_file, 'w', newline='') as f:
        
        writer = csv.DictWriter(f, fieldnames=['CWE', 'Folder', 'func', 'Palm_Output', 'Prompt'])
        writer.writeheader()
        
        # For each actual function
        for x in range(len(data)):
            
            # get cwe and folder for the current row
            CWE = data[x]['CWE']
            Folder = data[x]['Folder']
            
            top_cwe_sbert = []
            # Find respective t3 closest cwe according to sbert
            for y in range(len(ranking_data)):
                if CWE == ranking_data[y]['Cwe'].lower() and Folder == ranking_data[y]['Folder']:
                    
                    for i in range(3):
                        if ranking_data[y]['Id_of_description_' + str(i+1)] != '':
                            top_cwe_sbert.append('cwe-' + ranking_data[y]['Id_of_description_' + str(i+1)])
                    
                    # Break when we found and do things with the respective CWE
                    break
            
            
            # Look for examples for each cwe in top_cwe_sbert
            examples =  []
            # Look for respective CWEs in bigvul_data (only taking vulnerable CWEs)
            for y in top_cwe_sbert:
                example_count = 0   # We only need 3 examples per CWE
                
                for z in range(len(bigvul_data)):
                    if y == bigvul_data[z]['CWE ID'].lower() and bigvul_data[z]['target'] == '1':
                        example = {
                            'CWE': y,
                            'func': bigvul_data[z]['func']
                        }
                        examples.append(example)
                        example_count += 1
                    
                    # break out of loop if have already found 3 examples
                    if example_count == 3:
                        break
                  
            non_vul_examples = []
            if len(top_cwe_sbert) == 0:
                # Show 3 examples of non-vulnerbale functions
                for y in range(3):
                    random_number = random.randint(0, 8921)
                    non_vul_examples.append(bigvul_data[random_number]['func'])
            
            
            try:
                if len(examples) != 0:
                    prompt = "Here are few examples of vulnerable functions. First look at them and then I will ask you a question."
                    
                    for y in examples:
                        prompt += y['CWE']+ " is associated with " + y['func']
                        prompt += "\n"
                    
                    # Ask if the function is vulnerable to the example CWE
                    prompt += "Is the upcoming function vulnerable to " + "any of these CWEs above?" + data[x]['func']
                    
                    
                    response = palm.generate_text(model=model_id, prompt=prompt, temperature=0)
                 
                if len(non_vul_examples) != 0:
                    prompt = "Here are few examples of non-vulnerable functions. First look at them and then I will ask you a question."
                    
                    for y in non_vul_examples:
                        prompt += "Example:\n"
                        prompt += y
        
                    prompt += "In the upcoming function vulnerable to any of these CWEs:\n" + data[x]['func']
                    
                    # We have function. Give it 9 example of respective CWE or 3 non-vulnerablle function
                    
                    # Ask if the function is vulnerable to the example CWE
                    
                    
                    response = palm.generate_text(model=model_id, prompt=prompt, temperature=0)
                    
                record = {'CWE': CWE,
                        'Folder': Folder,
                        'func': data[x]['func'],
                        'Palm_Output': response.candidates[0]['output'],
                        'Prompt': prompt}
            
                writer.writerow(record)
            except Exception as e:
                print(f"Skipping folder {Folder} and {CWE} due to error: {e}")

    
def read_functions(file):
    row = []
    with open(file, 'r') as f:
        reader = csv.DictReader(f)
        for x in reader:
            row.append(x)
            
    return row
        
def read_bigvul_functions(file):
    row = []
    with open(file, 'r') as f:
        reader = csv.DictReader(f)
        for x in reader:
            row.append(x)
            
    return row

def read_rankings(file):
    row = []
    with open(file, 'r') as f:
        reader = csv.DictReader(f)
        for x in reader:
            row.append(x)
            
    return row

if __name__  == '__main__':
    main()