import xml.etree.ElementTree as ET

# Read the XML data from the file
with open("cwec_v4.12.xml", "r", encoding="utf-8") as file:
    xml_data = file.read()

# Parse the XML data
root = ET.fromstring(xml_data)

# Define the namespace
namespace = {"cwe": "http://cwe.mitre.org/cwe-7", "xhtml": "http://www.w3.org/1999/xhtml"}

def main():
    
    data = []
    # Iterate through each Weakness element
    for weakness in root.findall(".//cwe:Weakness", namespace):
        weakness_id = weakness.get("ID")

        weakness_total_desc = ""

        weakness_desc = weakness.find(".//cwe:Description", namespace).text

        weakness_extended_desc = weakness.find(".//cwe:Extended_Description", namespace)

        if weakness_extended_desc is not None:
            if weakness_extended_desc.find(".//xhtml:p", namespace) is not None:
                # Extract the nested content within <Extended_Description>
                extended_description = ""
                for xhtml_p in weakness_extended_desc.findall(".//xhtml:p", namespace):
                    extended_description += xhtml_p.text + "\n"
                extended_description = extended_description.strip()
            else:
                # Plain text Extended_Description
                extended_description = weakness_extended_desc.text.strip()
        else:
            extended_description = ""

        weakness_total_desc = weakness_desc + extended_description

        data.append({
            'id': weakness_id, 
            'description': weakness_total_desc})  # Print combined description
        
        with open('descriptions.py', 'w') as f:
            descriptions_string = str(data)
            f.write(descriptions_string)
        

if __name__ == '__main__':
    main()
